<?xml version="1.0" encoding="UTF-8"?>
<root BTCPP_format="4" main_tree_to_execute="planner">
  <BehaviorTree ID="planner">
    <Sequence _description="to avoid obstacle">

      <!-- <Script code=" goal_position:='1.5;0.0;1.0' "/> 
      <Script code=" goal_ori:='0.0;0.0;0.0' "/> -->
        <!-- 发送目标点进行轨迹规划 -->
      <!-- goal_sre -->
      <PlanNode goal_position="{goal_position}" goal_ori="{goal_ori}"  goal_src="{goal_src}" enabel_yaw="{enabel_yaw}" enabel_yaw_rate="{enabel_yawrate}" enabel_planner="true" planner_ctrl_type="{planner_ctrl_type}" />
    </Sequence>
  </BehaviorTree>

  <!-- 定义节点模型 -->
  <TreeNodesModel>
    <Action ID="PlanNode">
            <input_port name="enabel_yaw_rate" type="BT::AnyTypeAllowed">use trajecotry yaw_rate</input_port>
            <input_port name="enabel_yaw" type="BT::AnyTypeAllowed">use trajectory yaw</input_port>
            <input_port name="planner_ctrl_type" type="BT::AnyTypeAllowed">choose the control type,0:pose,1:volicty,2:accelerate</input_port>
            <input_port name="enabel_planner" type="BT::AnyTypeAllowed">open or close planner</input_port>
            <input_port name="goal_ori" type="BT::AnyTypeAllowed">the goal orientation, [roll, pitch, yaw]</input_port>
            <input_port name="goal_src" type="BT::AnyTypeAllowed">0: xml set; 1:program inner;3: rviz</input_port>
            <input_port name="goal_position" type="BT::AnyTypeAllowed">the goal position</input_port>
    </Action>
  </TreeNodesModel>
</root>
